version: '3.8'

services:
  kafka1:
    image: apache/kafka:latest
    container_name: kafka-container1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-container1:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka-container1:9092,CONTROLLER://kafka-container1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-container1:9093,2@kafka-container2:9095
      KAFKA_LOG_DIRS: /var/lib/kafka/data1
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - myNetwork
    volumes:
      - my_shared_volume:/shared_data

  kafka2:
    image: apache/kafka:latest
    container_name: kafka-container2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-container2:9094
      KAFKA_LISTENERS: PLAINTEXT://kafka-container2:9094,CONTROLLER://kafka-container2:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-container1:9093,2@kafka-container2:9095
      KAFKA_LOG_DIRS: /var/lib/kafka/data2
    ports:
      - "9094:9094"
      - "9095:9095"
    networks:
      - myNetwork
    volumes:
      - my_shared_volume:/shared_data

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-container1:9092,kafka-container2:9094
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: connect-cluster
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_PLUGIN_PATH: /usr/share/java
    depends_on:
      - kafka1
      - kafka2
    networks:
      - myNetwork
    volumes:
      - my_shared_volume:/shared_data

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: LocalCluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-container1:9092,kafka-container2:9094
      KAFKA_CLUSTERS_0_ZOOKEEPER: dummy:2181 # Not used with KRaft, but required
    depends_on:
      - kafka1
      - kafka2
    networks:
      - myNetwork
    volumes:
      - my_shared_volume:/shared_data

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: testdb
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password --binlog-format=ROW --server-id=1
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
    networks:
      - myNetwork
    volumes:
      - my_shared_volume:/shared
      - my_shared_volume:/docker-entrypoint-initdb.d

  cassandra:
    image: cassandra:latest
    container_name: cassandra-container
    ports:
      - "9042:9042"
    networks:
      - myNetwork
    volumes:
      - my_shared_volume:/shared_data

volumes:
  my_shared_volume:

networks:
  myNetwork:
    external: true

